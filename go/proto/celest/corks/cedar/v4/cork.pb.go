// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.36.10
// 	protoc        (unknown)
// source: celest/corks/cedar/v4/cork.proto

package v4

import (
	v4 "github.com/celest-dev/corks/go/proto/cedar/v4"
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	_ "google.golang.org/protobuf/types/known/anypb"
	reflect "reflect"
	sync "sync"
	unsafe "unsafe"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

// A bearer token that can be used to make claims about an entity for the purpose
// of authorization and authentication w/ Cedar.
type CedarCork struct {
	state protoimpl.MessageState `protogen:"open.v1"`
	// The unique identifier of the cork.
	Id []byte `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`
	// The issuing authority of the cork.
	Issuer *v4.EntityUid `protobuf:"bytes,2,opt,name=issuer,proto3" json:"issuer,omitempty"`
	// The bearer of the cork, about which [claims] can be made.
	Bearer *v4.EntityUid `protobuf:"bytes,3,opt,name=bearer,proto3" json:"bearer,omitempty"`
	// The intended audience of the cork.
	Audience *v4.EntityUid `protobuf:"bytes,4,opt,name=audience,proto3,oneof" json:"audience,omitempty"`
	// Claims made about the [bearer] of the cork.
	Claims *v4.Entity `protobuf:"bytes,5,opt,name=claims,proto3,oneof" json:"claims,omitempty"`
	// The caveats to this cork's validity and usage.
	//
	// Caveats are structured conditions which must be met for the cork to be considered
	// valid and for its claims to be considered true.
	//
	// Effectively, these form the body of a `forbid unless` policy AND'd together.
	Caveats []*v4.Expr `protobuf:"bytes,6,rep,name=caveats,proto3" json:"caveats,omitempty"`
	// The final signature of the cork.
	Signature     []byte `protobuf:"bytes,999,opt,name=signature,proto3" json:"signature,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *CedarCork) Reset() {
	*x = CedarCork{}
	mi := &file_celest_corks_cedar_v4_cork_proto_msgTypes[0]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *CedarCork) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CedarCork) ProtoMessage() {}

func (x *CedarCork) ProtoReflect() protoreflect.Message {
	mi := &file_celest_corks_cedar_v4_cork_proto_msgTypes[0]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CedarCork.ProtoReflect.Descriptor instead.
func (*CedarCork) Descriptor() ([]byte, []int) {
	return file_celest_corks_cedar_v4_cork_proto_rawDescGZIP(), []int{0}
}

func (x *CedarCork) GetId() []byte {
	if x != nil {
		return x.Id
	}
	return nil
}

func (x *CedarCork) GetIssuer() *v4.EntityUid {
	if x != nil {
		return x.Issuer
	}
	return nil
}

func (x *CedarCork) GetBearer() *v4.EntityUid {
	if x != nil {
		return x.Bearer
	}
	return nil
}

func (x *CedarCork) GetAudience() *v4.EntityUid {
	if x != nil {
		return x.Audience
	}
	return nil
}

func (x *CedarCork) GetClaims() *v4.Entity {
	if x != nil {
		return x.Claims
	}
	return nil
}

func (x *CedarCork) GetCaveats() []*v4.Expr {
	if x != nil {
		return x.Caveats
	}
	return nil
}

func (x *CedarCork) GetSignature() []byte {
	if x != nil {
		return x.Signature
	}
	return nil
}

var File_celest_corks_cedar_v4_cork_proto protoreflect.FileDescriptor

const file_celest_corks_cedar_v4_cork_proto_rawDesc = "" +
	"\n" +
	" celest/corks/cedar/v4/cork.proto\x12\x15celest.corks.cedar.v4\x1a\x15cedar/v4/entity.proto\x1a\x19cedar/v4/entity_uid.proto\x1a\x13cedar/v4/expr.proto\x1a\x19google/protobuf/any.proto\"\xbb\x02\n" +
	"\tCedarCork\x12\x0e\n" +
	"\x02id\x18\x01 \x01(\fR\x02id\x12+\n" +
	"\x06issuer\x18\x02 \x01(\v2\x13.cedar.v4.EntityUidR\x06issuer\x12+\n" +
	"\x06bearer\x18\x03 \x01(\v2\x13.cedar.v4.EntityUidR\x06bearer\x124\n" +
	"\baudience\x18\x04 \x01(\v2\x13.cedar.v4.EntityUidH\x00R\baudience\x88\x01\x01\x12-\n" +
	"\x06claims\x18\x05 \x01(\v2\x10.cedar.v4.EntityH\x01R\x06claims\x88\x01\x01\x12(\n" +
	"\acaveats\x18\x06 \x03(\v2\x0e.cedar.v4.ExprR\acaveats\x12\x1d\n" +
	"\tsignature\x18\xe7\a \x01(\fR\tsignatureB\v\n" +
	"\t_audienceB\t\n" +
	"\a_claimsB\xb7\x01\n" +
	"\x19com.celest.corks.cedar.v4B\tCorkProtoP\x01Z\x18celest/corks/cedar/v4;v4\xa2\x02\x03CCC\xaa\x02\x15Celest.Corks.Cedar.V4\xca\x02\x15Celest\\Corks\\Cedar\\V4\xe2\x02!Celest\\Corks\\Cedar\\V4\\GPBMetadata\xea\x02\x18Celest::Corks::Cedar::V4b\x06proto3"

var (
	file_celest_corks_cedar_v4_cork_proto_rawDescOnce sync.Once
	file_celest_corks_cedar_v4_cork_proto_rawDescData []byte
)

func file_celest_corks_cedar_v4_cork_proto_rawDescGZIP() []byte {
	file_celest_corks_cedar_v4_cork_proto_rawDescOnce.Do(func() {
		file_celest_corks_cedar_v4_cork_proto_rawDescData = protoimpl.X.CompressGZIP(unsafe.Slice(unsafe.StringData(file_celest_corks_cedar_v4_cork_proto_rawDesc), len(file_celest_corks_cedar_v4_cork_proto_rawDesc)))
	})
	return file_celest_corks_cedar_v4_cork_proto_rawDescData
}

var file_celest_corks_cedar_v4_cork_proto_msgTypes = make([]protoimpl.MessageInfo, 1)
var file_celest_corks_cedar_v4_cork_proto_goTypes = []any{
	(*CedarCork)(nil),    // 0: celest.corks.cedar.v4.CedarCork
	(*v4.EntityUid)(nil), // 1: cedar.v4.EntityUid
	(*v4.Entity)(nil),    // 2: cedar.v4.Entity
	(*v4.Expr)(nil),      // 3: cedar.v4.Expr
}
var file_celest_corks_cedar_v4_cork_proto_depIdxs = []int32{
	1, // 0: celest.corks.cedar.v4.CedarCork.issuer:type_name -> cedar.v4.EntityUid
	1, // 1: celest.corks.cedar.v4.CedarCork.bearer:type_name -> cedar.v4.EntityUid
	1, // 2: celest.corks.cedar.v4.CedarCork.audience:type_name -> cedar.v4.EntityUid
	2, // 3: celest.corks.cedar.v4.CedarCork.claims:type_name -> cedar.v4.Entity
	3, // 4: celest.corks.cedar.v4.CedarCork.caveats:type_name -> cedar.v4.Expr
	5, // [5:5] is the sub-list for method output_type
	5, // [5:5] is the sub-list for method input_type
	5, // [5:5] is the sub-list for extension type_name
	5, // [5:5] is the sub-list for extension extendee
	0, // [0:5] is the sub-list for field type_name
}

func init() { file_celest_corks_cedar_v4_cork_proto_init() }
func file_celest_corks_cedar_v4_cork_proto_init() {
	if File_celest_corks_cedar_v4_cork_proto != nil {
		return
	}
	file_celest_corks_cedar_v4_cork_proto_msgTypes[0].OneofWrappers = []any{}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: unsafe.Slice(unsafe.StringData(file_celest_corks_cedar_v4_cork_proto_rawDesc), len(file_celest_corks_cedar_v4_cork_proto_rawDesc)),
			NumEnums:      0,
			NumMessages:   1,
			NumExtensions: 0,
			NumServices:   0,
		},
		GoTypes:           file_celest_corks_cedar_v4_cork_proto_goTypes,
		DependencyIndexes: file_celest_corks_cedar_v4_cork_proto_depIdxs,
		MessageInfos:      file_celest_corks_cedar_v4_cork_proto_msgTypes,
	}.Build()
	File_celest_corks_cedar_v4_cork_proto = out.File
	file_celest_corks_cedar_v4_cork_proto_goTypes = nil
	file_celest_corks_cedar_v4_cork_proto_depIdxs = nil
}
